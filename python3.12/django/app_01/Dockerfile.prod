# python
FROM python:3.12.0b3-slim as builder 
# work directory
WORKDIR /app_01
# python envs
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1 
# system depend-s
RUN apt-get update && apt-get -y dist-upgrade
RUN apt-get -y install build-essential libssl-dev libffi-dev libblas3 libc6 liblapack3 gcc python3-dev python3-pip cython3
RUN apt-get -y install python3-numpy python3-scipy 
RUN apt install -y netcat-traditional
# pip depends
RUN pip install --upgrade pip 
# lints
RUN pip install flake8==7.0.0
# poetry
RUN pip install poetry
COPY poetry.lock .
COPY pyproject.toml .
RUN poetry install

## final build
# python
FROM python:3.12.0b3-slim
# create directory for app
RUN mkdir -p /home/app 
# create user 
RUN addgroup --system app && adduser --system --group app 
# create directories
ENV HOME=/home/app 
ENV APP_HOME=/home/app/web 
RUN mkdir $APP_HOME 
RUN mkdir $APP_HOME/staticfiles 
RUN chmod +x $APP_HOME/staticfiles
RUN mkdir $APP_HOME/mediafiles 
RUN chmod +x $APP_HOME/mediafiles
WORKDIR $APP_HOME
# install depen-s
RUN apt-get update && apt-get -y dist-upgrade
RUN apt-get -y install build-essential libssl-dev libffi-dev libblas3 libc6 liblapack3 gcc python3-dev python3-pip cython3
RUN apt-get -y install python3-numpy python3-scipy 
RUN apt install -y netcat-traditional
RUN pip install --upgrade pip 
RUN pip install poetry
COPY poetry.lock .
COPY pyproject.toml .
RUN poetry install
# entry point
COPY entrypoint.prod.sh .  
# depends entrypoint
RUN sed -i 's/\r$//g' $APP_HOME/entrypoint.prod.sh 
# permissions change
RUN chmod +x $APP_HOME/entrypoint.prod.sh 
# copy 
COPY . $APP_HOME 
# chown 
RUN chown -R app:app $APP_HOME 
# chane user
USER app 
# run entrypoint script
ENTRYPOINT [ "/home/app/web/entrypoint.sh"]